name: Hourly Tests

on:
  workflow_dispatch:
    inputs:
      release_token:
        description: 'Your release token'
        required: true
  schedule:
    - cron: "3 * * * *"   # runs at 6AM UTC (mon-fri)
#  pull_request:             # uncomment this if you want to run nightly tests in your PR

jobs:
  token-check:
    runs-on: ubuntu-latest
    steps:
      - run: echo "success!"
        if: "${{ github.event.inputs.release_token }} == ${{ env.release_token }}"
        env:
          release_token: ${{ secrets.DOCSQA_ADMIN_TOKEN }}

  health-check:
    needs: token-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
#          ref: ${{ github.event.inputs.branch }}
          path: docsQA-status
      - uses: actions/checkout@v3
        with:
          repository: jina-ai/docsQA-status-datahouse
          token: ${{ secrets. DOCSQA_STATUS_TOKEN }}
          path: docsQA-status-datahouse
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install requirements
        run: |
          pip install -r docsQA-status/requirements.txt
        env:
          DOCSQA_ADMIN_TOKEN: ${{ secrets.DOCSQA_ADMIN_TOKEN }}
      - name: Run Healthy Check
        id: run-health-check
        run: |
          cd docsQA-status
          git config --local user.email "dev-bot@jina.ai"
          git config --local user.name "Jina Dev Bot"
          git config pull.rebase true
          [ -f "../docsQA-status-datahouse/data.json" ] && cp ../docsQA-status-datahouse/data.json ./
          echo "::set-output name=HEALTH_CHECK_FAILED::$(python app.py | tail -n1)"
          git fetch
          # Update data in datahouse
          cp data.json ../docsQA-status-datahouse/data.json.1
          git checkout -f gh-pages
          mv output.md README.md
          git add README.md && git commit -m "chore(docs): health check"
          git push --force origin gh-pages
          cd ../docsQA-status-datahouse
          git config --local user.email "dev-bot@jina.ai"
          git config --local user.name "Jina Dev Bot"
          git config pull.rebase true
          git checkout -f main
          git fetch
          mv data.json.1 data.json
          git add data.json && git commit -m "chore(docs): health check"
          git push --force origin main
        env:
          DOCSQA_ADMIN_TOKEN: ${{ secrets.DOCSQA_ADMIN_TOKEN }}
      - if: steps.run-health-check.outputs.HEALTH_CHECK_FAILED == 'True'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: |
            :no_entry: DocsQA services health check failed, see www.jina.ai/docsQA-status for details
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.DOCSQA_PR_NOTIFICATION_SLACK_HOOK }}

